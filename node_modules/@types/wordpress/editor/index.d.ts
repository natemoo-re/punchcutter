export { }
import '@punchcutter/core';

declare global {
    
    namespace wp {
        const editor: Editor;
    }

    namespace JSX {
        interface IntrinsicElements {
            RichText: JSXElements.RichTextAttributes;
            BlockControls: JSXElements.BlockControlsAttributes;
            AlignmentToolbar: JSXElements.AlignmentToolbarAttributes;
        }
    }

    namespace WPComponents {
        interface RichText {
            key: string;
            tagName: string;
            className: string;
            style: { [key: string]: string };
            onChange: (...args: any[]) => any;
            value: string | string[];
        }
    }

    interface HTMLRichTextComponent extends WPComponents.RichText { }

    var HTMLRichTextComponent: {
        prototype: HTMLRichTextComponent;
        new(): HTMLRichTextComponent;
    };

    namespace JSXElements {
        export interface RichTextAttributes extends HTMLAttributes {
            key?: string;
            tagName?: string;
            className?: string;
            style?: { [key: string]: string };
            onChange?: (...args: any[]) => any;
            value?: string | string[];
        }
        export interface BlockControlsAttributes extends HTMLAttributes {
            key?: string;
        }
        export interface AlignmentToolbarAttributes extends HTMLAttributes {
            value?: string;
            onChange?: (...args: any[]) => any;
        }
    }
    interface JSXElement {}

    interface Editor {
        RichText: (args: JSXElements.RichTextAttributes) => JSXElement;
        BlockControls: (args: JSXElements.BlockControlsAttributes) => JSXElement;
        AlignmentToolbar: (args: JSXElements.AlignmentToolbarAttributes) => JSXElement;
    }

}
