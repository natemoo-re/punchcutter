export namespace WP {
    export abstract class Block<T extends { [key: string]: any }> {
        readonly attributes: T;
        abstract edit(props?: props<T>): any;
        abstract save(props?: props<T>): any;
    }
    
    export interface props<T> {
        attributes: T;
        className: string;
        setAttributes(value: { [key in keyof T]?: T[key] });
    }
}

